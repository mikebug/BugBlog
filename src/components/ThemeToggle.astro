<button id="theme-toggle" aria-label="Toggle theme"> Toggle Theme </button>

<script>
  // src/lib/theme-init.js
  import {
    getInitialTheme,
    applyTheme,
    initializeThemeListener,
    toggleTheme,
  } from "../lib/theme.js";

  // Initialize theme as early as possible
  function initializeTheme() {
    const initialTheme = getInitialTheme();
    applyTheme(initialTheme);
    initializeThemeListener();
    attachThemeToggleListener();
  }

  // Attach event listener to theme toggle button
  function attachThemeToggleListener() {
    const themeToggle = document.getElementById("theme-toggle");
    if (themeToggle) {
      // Remove existing listeners to prevent duplicates
      const newThemeToggle = themeToggle.cloneNode(true);
      if (themeToggle.parentNode) {
        themeToggle.parentNode.replaceChild(newThemeToggle, themeToggle);
      }

      newThemeToggle.addEventListener("click", () => {
        const newTheme = toggleTheme();
        // Update button text if needed
        if (newThemeToggle.textContent) {
          newThemeToggle.textContent = `${newTheme === "dark" ? "Light ☀️" : "Dark 🌙"} Mode`;
        }
      });
    }
  }

  // Execute immediately if document is ready
  if (document.readyState !== "loading") {
    initializeTheme();
  } else {
    document.addEventListener("DOMContentLoaded", initializeTheme);
  }

  // Re-apply theme and reattach listeners after view transitions
  document.addEventListener("astro:after-swap", () => {
    const currentTheme = localStorage.getItem("theme");
    if (currentTheme) {
      applyTheme(currentTheme);
    }
    attachThemeToggleListener();
  });

  // Also handle theme toggle during page transitions
  document.addEventListener("astro:after-preparation", () => {
    attachThemeToggleListener();
  });
</script>

<style>
  #theme-toggle {
    width: 150px;
    height: 50px;
    font-size: 1rem;
    font-weight: bold;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    background: linear-gradient(135deg, var(--accent), var(--secondary-color));
    color: var(--background);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease,
      background 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #theme-toggle:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
  }

  #theme-toggle:active {
    transform: translateY(0);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
  }

  #theme-toggle:focus {
    outline: 3px solid var(--accent);
    outline-offset: 2px;
  }
</style>
